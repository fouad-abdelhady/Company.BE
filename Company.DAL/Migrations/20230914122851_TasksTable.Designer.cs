// <auto-generated />
using System;
using Company.DAL.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Company.DAL.Migrations
{
    [DbContext(typeof(CompanyContext))]
    [Migration("20230914122851_TasksTable")]
    partial class TasksTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Company.DAL.Data.Models.Auth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("StaffMemberId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("StaffMemberId");

                    b.ToTable("Auths");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "123456789",
                            StaffMemberId = 1,
                            UserName = "fouad.abdelhady"
                        },
                        new
                        {
                            Id = 2,
                            Password = "123456789",
                            StaffMemberId = 2,
                            UserName = "ahmed.abdelhady"
                        },
                        new
                        {
                            Id = 3,
                            Password = "Admin",
                            StaffMemberId = 3,
                            UserName = "admin.admin"
                        });
                });

            modelBuilder.Entity("Company.DAL.Data.Models.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(15,2)");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.ToTable("Staffs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmailAddress = "fouad.abdelhady@egabi.com",
                            FullName = "Fouad Abdelhady Fouad",
                            Role = "Manager",
                            Salary = 40000.5m
                        },
                        new
                        {
                            Id = 2,
                            EmailAddress = "ahmed.abdelhady@egabi.com",
                            FullName = "Ahmed Abdelhady Fouad",
                            ManagerId = 1,
                            Role = "Employee",
                            Salary = 4000.5m
                        },
                        new
                        {
                            Id = 3,
                            EmailAddress = "admin@admin.com",
                            FullName = "Admin",
                            Role = "Admin",
                            Salary = 20000m
                        });
                });

            modelBuilder.Entity("Company.DAL.Data.Models.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("Grade")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SeenAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StateChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 9, 14, 15, 28, 51, 119, DateTimeKind.Local).AddTicks(840),
                            CreatorId = 1,
                            Description = "First week task",
                            EmployeeId = 2,
                            StateChangedAt = new DateTime(2023, 9, 14, 15, 28, 51, 119, DateTimeKind.Local).AddTicks(885),
                            Status = 0,
                            Title = "First Task"
                        });
                });

            modelBuilder.Entity("Company.DAL.Data.Models.Auth", b =>
                {
                    b.HasOne("Company.DAL.Data.Models.Staff", "StaffMember")
                        .WithMany()
                        .HasForeignKey("StaffMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StaffMember");
                });

            modelBuilder.Entity("Company.DAL.Data.Models.Staff", b =>
                {
                    b.HasOne("Company.DAL.Data.Models.Staff", "Manager")
                        .WithMany("TeamMembers")
                        .HasForeignKey("ManagerId");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Company.DAL.Data.Models.Task", b =>
                {
                    b.HasOne("Company.DAL.Data.Models.Staff", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Company.DAL.Data.Models.Staff", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Company.DAL.Data.Models.Staff", b =>
                {
                    b.Navigation("TeamMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
